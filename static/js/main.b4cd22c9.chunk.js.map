{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","clicked","isClicked","event","name","target","setState","handleChange","value","resetState","handleSubmit","preventDefault","props","onAdd","this","isValid","isUrl","length","match","handleButton","onSubmit","htmlFor","type","id","classNames","error","placeholder","onChange","onBlur","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4cd22c9.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable max-len */\nimport { ChangeEvent, Component, FormEvent } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: CallableFunction,\n};\n\ntype ClickedValues = {\n  title: boolean,\n  imgUrl: boolean,\n  imdbUrl: boolean,\n  imdbId: boolean,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  clicked: ClickedValues,\n  [key: string]: unknown,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    clicked: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  isClicked = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name } = event.target;\n\n    this.setState(state => ({\n      clicked: {\n        ...state.clicked,\n        [name]: true,\n      },\n    }));\n  };\n\n  handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  resetState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      clicked: {\n        title: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n      },\n    });\n  };\n\n  handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    this.props.onAdd(this.state);\n    this.resetState();\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      clicked,\n    } = this.state;\n\n    const isValid = (value: string, isUrl: boolean) => {\n      if (isUrl) {\n        return value.length > 0\n        && value.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n      }\n\n      return value.length > 0;\n    };\n\n    const handleButton\n    = isValid(title, false)\n    && isValid(imgUrl, true)\n    && isValid(imdbUrl, true)\n    && isValid(imdbId, false);\n\n    return (\n      <div className=\"form__container\">\n        <div className=\"form__title\">\n          <h1>Add movie</h1>\n        </div>\n\n        <form\n          className=\"form__body\"\n          onSubmit={this.handleSubmit}\n        >\n          <label htmlFor=\"title\">\n            Title:\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              className={classNames(\n                'input',\n                { error: clicked.title && !isValid(title, false) },\n              )}\n              placeholder=\"Enter title\"\n              value={title}\n              onChange={this.handleChange}\n              onBlur={this.isClicked}\n            />\n            {\n              !isValid(title, false)\n            && clicked.title\n            && <p className=\"form__error\">Enter a valid title</p>\n            }\n          </label>\n\n          <label htmlFor=\"description\">\n            Description:\n            <input\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              className=\"input\"\n              placeholder=\"Enter description\"\n              value={description}\n              onChange={this.handleChange}\n              onBlur={this.isClicked}\n            />\n          </label>\n\n          <label htmlFor=\"imgUrl\">\n            Image URL:\n            <input\n              type=\"text\"\n              id=\"imgUrl\"\n              name=\"imgUrl\"\n              className={classNames(\n                'input',\n                { error: clicked.imgUrl && !isValid(imgUrl, true) },\n              )}\n              placeholder=\"Enter image URL\"\n              value={imgUrl}\n              onChange={this.handleChange}\n              onBlur={this.isClicked}\n            />\n            {\n              !isValid(imgUrl, true)\n            && clicked.imgUrl\n            && <p className=\"form__error\">Enter a valid image URL</p>\n            }\n          </label>\n\n          <label htmlFor=\"imdbUrl\">\n            IMDB URL:\n            <input\n              type=\"text\"\n              id=\"imdbUrl\"\n              name=\"imdbUrl\"\n              className={classNames(\n                'input',\n                { error: clicked.imdbUrl && !isValid(imdbUrl, true) },\n              )}\n              placeholder=\"Enter IMDB URL\"\n              value={imdbUrl}\n              onChange={this.handleChange}\n              onBlur={this.isClicked}\n            />\n            {\n              !isValid(imdbUrl, true)\n            && clicked.imdbUrl\n            && <p className=\"form__error\">Enter a valid IMDB URL</p>\n            }\n          </label>\n\n          <label htmlFor=\"imdbId\">\n            IMDB ID:\n            <input\n              type=\"text\"\n              id=\"imdbId\"\n              name=\"imdbId\"\n              className={classNames(\n                'input',\n                { error: clicked.imdbId && !isValid(imdbId, false) },\n              )}\n              placeholder=\"Enter IMDB ID\"\n              value={imdbId}\n              onChange={this.handleChange}\n              onBlur={this.isClicked}\n            />\n            {\n              !isValid(imdbId, false)\n            && clicked.imdbId\n            && <p className=\"form__error\">Enter a valid IMDB ID</p>\n            }\n          </label>\n\n          <button\n            type=\"submit\"\n            disabled={!handleButton}\n          >\n            Add movie\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}